generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  email    String? @unique
  password String?
  avatar   String?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  posts    FeedbackPost[]
  comments Comment[]
  upvotes  Upvote[]
}

model FeedbackPost {
  id          String @id @default(uuid())
  title       String
  description String
  status_id   String
  category_id String
  user_id     String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  comments Comment[]
  upvotes  Upvote[]
  category Category  @relation(fields: [category_id], references: [id])
  status   Status    @relation(fields: [status_id], references: [id])
  user     User      @relation(fields: [user_id], references: [id])
}

model Category {
  id   String @id @default(uuid())
  name String @unique

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  feedbackPosts FeedbackPost[]
}

model Status {
  id   String @id @default(uuid())
  name String @unique

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  feedbackPosts FeedbackPost[]
}

model Comment {
  id                String  @id @default(uuid())
  content           String
  parent_comment_id String?
  post_id           String
  user_id           String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  post          FeedbackPost @relation(fields: [post_id], references: [id])
  parentComment Comment?     @relation("NestedComments", fields: [parent_comment_id], references: [id])
  childComments Comment[]    @relation("NestedComments")
  user          User         @relation(fields: [user_id], references: [id])
}

model Upvote {
  id      String @id @default(uuid())
  post_id String
  user_id String

  post FeedbackPost @relation(fields: [post_id], references: [id])
  user User         @relation(fields: [user_id], references: [id])

  @@unique([user_id, post_id])
}
